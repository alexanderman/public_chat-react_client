{"version":3,"sources":["components/Header.js","components/Login.js","components/Chat/Input.js","components/Chat/Message.js","components/Chat/Chat.js","components/ScrollBar.js","services/socket-service.js","services/avatars-service.js","App.js","serviceWorker.js","index.js"],"names":["WhiteButton","withStyles","theme","root","color","palette","getContrastText","blue","borderColor","Button","useStyles","makeStyles","toolbar","justifyContent","user","logout","classes","title","username","AppBar","position","Toolbar","className","Typography","variant","onClick","container","display","marginTop","alignItems","opacity","marginBottom","actions","padding","paddingTop","onLogin","useState","nickname","setNickname","hasError","setHasError","clickHandler","_hasError","length","test","Container","maxWidth","Card","CardHeader","subheader","CardContent","TextField","error","onKeyPress","e","key","helperText","value","fullWidth","label","onChange","target","CardActions","margin","flexDirection","textField","border","marginRight","button","sendMessage","message","setMessage","disabled","handleSend","Divider","light","placeholder","Send","useStylesLeft","avatar","text","borderRadius","borderTopLeftRadius","useStylesRight","marginLeft","backgroundColor","info","borderTopRightRadius","chatSvc","avatarUrl","isMe","userLetters","parts","trim","split","toUpperCase","getUsernameLetters","Tooltip","Avatar","alt","src","Paper","elevation","flex","minHeight","scrollbar","paddingBottom","children","isAutoScroll","setIsAutoScroll","scrollRef","useRef","useEffect","current","_container","scrollTop","scrollHeight","ref","onScrollUp","onYReachEnd","options","suppressScrollX","messages","setMessages","console","log","onMessagesReceived","socket","socketClient","on","emit","closeConnection","disconnect","connect","receiveMessages","receivedMessages","square","ScrollBar","map","m","i","Message","Input","AVATARS","getRandomAvatar","Math","floor","random","App","setUser","Header","Chat","Login","input","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5f89a80e.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nconst WhiteButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(blue[500]),\n    borderColor: theme.palette.getContrastText(blue[500])\n  },\n}))(Button);\n\nconst useStyles = makeStyles({\n    toolbar: {\n        justifyContent: 'space-between'\n    }\n})\n\n\nexport default ({ user, logout }) => {\n    const classes = useStyles();\n    const title = user ? `Welcome ${user.username}` : 'Public Chat';\n    \n    return (\n        <AppBar position=\"static\">\n            <Toolbar className={classes.toolbar}>\n                <Typography>{title}</Typography>\n                { user ? <WhiteButton variant=\"outlined\" onClick={logout}>Logout</WhiteButton> : null }\n            </Toolbar>\n        </AppBar>\n    );\n}","import React, { useState } from 'react';\nimport { TextField, Card, CardContent, CardActions, CardHeader, Container, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        marginTop: '2rem',\n        alignItems: 'center'\n    },\n    title: {\n        opacity: 0.6,\n        marginBottom: '0.5rem'\n    },\n    actions: {\n        padding: '1rem',\n        paddingTop: 0\n    }\n});\n\nexport default ({ onLogin }) => {\n    const classes = useStyles();\n    const [nickname, setNickname] = useState('');\n    const [hasError, setHasError] = useState(false);\n\n    const onInputChange = e => setNickname(e.target.value);\n\n    const clickHandler = () => {\n        const _hasError = nickname.length < 4 || !/^\\w+$/.test(nickname);\n        setHasError(_hasError);\n\n        if (!_hasError && onLogin) {\n            onLogin(nickname);\n        }\n    }\n\n    const handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            clickHandler();\n        }\n    }\n\n    return (\n        <Container maxWidth=\"xs\" className={classes.container}>\n            <Card>\n                <CardHeader subheader=\"Please enter nickname at least four characters long, use only alphanumeric characters\" />\n                <CardContent>\n                    <TextField error={hasError} \n                        onKeyPress={handleEnter}\n                        helperText={hasError ? 'invalid characters or too short' : ''} \n                        value={nickname} fullWidth \n                        variant=\"outlined\" label=\"nickname\" onChange={onInputChange} />\n                </CardContent>\n                <CardActions className={classes.actions}>\n                    <Button variant=\"contained\" color=\"primary\" fullWidth onClick={clickHandler}>Login</Button>\n                </CardActions>\n            </Card>\n        </Container>\n    );\n}","import React, { useState } from 'react';\nimport { TextField, Container, Button, Divider } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Send } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    container: {\n        padding: '1rem',\n        margin: 0,\n        display: 'flex', \n        flexDirection: 'row',\n        // backgroundColor: blue[500]\n    },\n    textField: {\n        border: 0,\n        marginRight: '0.5rem'\n    },\n    button: {\n\n    }\n});\n\nexport default ({ sendMessage }) => {\n    const classes = useStyles();\n    const [message, setMessage] = useState('');\n    const disabled = !message.length;\n    \n    const handTextChange = e => {\n        setMessage(e.target.value);\n    }\n\n    const handleSend = () => {\n        if (message.length > 0) {\n            setMessage('');\n            sendMessage(message);\n        }\n    }\n\n    const handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            handleSend();\n        }\n    }\n\n    return (\n        <>\n        <Divider light />\n        <Container className={classes.container}>\n            <TextField \n                fullWidth\n                className={classes.textField}\n                variant=\"filled\"\n                onKeyPress={handleEnter} \n                value={message} \n                onChange={handTextChange} \n                placeholder=\"enter your message\"\n            />\n            <Button \n                variant=\"outlined\"\n                disabled={disabled} \n                color=\"primary\" \n                onClick={handleSend}><Send />\n            </Button>\n        </Container>\n        </>\n    );\n}\n","import React from 'react';\nimport { Container, Avatar, Paper, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStylesLeft = makeStyles(theme => {\n    return {\n        container: {\n            display: 'flex', \n            flexDirection: 'row',\n            marginBottom: '1rem'\n        },\n        avatar: {\n            marginRight: '0.5rem'\n        },\n        text: {\n            marginTop: '0.5rem',\n            marginRight: '2rem',\n            borderRadius: '1.5rem',\n            padding: '1rem',\n            borderTopLeftRadius: 0\n        }\n    }\n});\n\nconst useStylesRight = makeStyles(theme => {\n    return {\n        container: {\n            display: 'flex', \n            flexDirection: 'row-reverse',\n            marginBottom: '1rem'\n        },\n        avatar: {\n            marginLeft: '0.5rem'\n        },\n        text: {\n            backgroundColor: theme.palette.info.light,\n            marginTop: '0.5rem',\n            marginLeft: '2rem',\n            borderRadius: '1.5rem',\n            padding: '1rem',\n            borderTopRightRadius: 0\n        }\n    }\n});\n\n// when has no avatar, will display first latters\nfunction getUsernameLetters(username) {\n    const parts = username.trim().split(/\\s+/);\n    return ((parts[0][0] || '') + (parts[1] ? parts[1][0] : '')).toUpperCase();\n}\n\n\nexport default ({ user: { avatarUrl, username }, message, isMe }) => {\n    const classes = isMe ? useStylesRight() : useStylesLeft();\n    const userLetters = getUsernameLetters(username);\n    \n    return (\n        <Container className={classes.container}>\n            <Tooltip title={username}>\n            <Avatar alt={username} className={classes.avatar} src={avatarUrl}>\n                {userLetters}\n            </Avatar>\n            </Tooltip>\n            <Paper elevation={3} className={classes.text}>{message}</Paper>\n        </Container>\n    );\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\nimport Input from './Input';\nimport Message from './Message';\nimport connect from '../../services/socket-service';\nimport ScrollBar from '../ScrollBar';\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        maxWidth: '700px',\n        flex: 1,\n        flexDirection: 'column',\n        padding: 0,\n        minHeight: '100px', // perfect scroll bar needs height in parent\n        backgroundColor: '#ffffff'\n    },\n    scrollbar: {\n        padding: '1rem 0',\n        paddingBottom: 0    \n    }\n});\n\nlet chatSvc;\n\nexport default ({ user }) => {\n    const classes = useStyles();\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        console.log('subscribe to messages');\n        chatSvc = connect(receiveMessages);\n\n        return () => {\n            console.log('unsubscribe from messages');\n            chatSvc.closeConnection();\n        }\n    }, []);\n\n\n    const receiveMessages = receivedMessages => {\n        setMessages(messages => ([...messages, ...receivedMessages]));\n    }\n\n    const sendMessage = message => {\n        chatSvc.sendMessage(user, message);\n        setMessages(messages => ([...messages, { user, message }]));\n    }\n\n    const isMe = message => message.user.username === user.username;\n    \n    return (\n        <Container square=\"true\" className={classes.container}>\n            <ScrollBar>\n                {messages.map((m, i) => <Message { ...m } isMe={isMe(m)} key={i} />)}\n            </ScrollBar>\n            <Input sendMessage={sendMessage} />\n        </Container>\n    );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        maxWidth: '700px',\n        flex: 1,\n        flexDirection: 'column',\n        padding: 0,\n        minHeight: '100px', // perfect scroll bar needs height in parent\n        backgroundColor: '#ffffff'\n    },\n    scrollbar: {\n        padding: '1rem 0',\n        paddingBottom: 0    \n    }\n});\n\nexport default ({ children }) => {\n    const classes = useStyles();\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\n    const scrollRef = useRef(null);\n\n    useEffect(() => {\n        if (isAutoScroll) {\n            scrollRef.current._container.scrollTop = scrollRef.current._container.scrollHeight;\n        }\n    }, [children]);\n\n    return (\n        <PerfectScrollbar \n            ref={scrollRef} \n            className={classes.scrollbar} \n            onScrollUp={() => setIsAutoScroll(false)}\n            onYReachEnd={() => setIsAutoScroll(true)}\n            options={{ suppressScrollX: true }}>\n\n            { children }            \n\n        </PerfectScrollbar> \n    );\n}\n","import socketClient from 'socket.io-client';\n// const SERVER_URL = process.env.REACT_APP_SERVER_URL;\nconst SERVER_URL = 'https://publicchatserveralex.herokuapp.com/;'\n\nexport default onMessagesReceived => {\n    const socket = socketClient(SERVER_URL);\n    socket.on('message', onMessagesReceived);\n    console.log('socket connecting...');\n\n    /** patch for: WebSocket is already in CLOSING or CLOSED state, which caused loading initial messages over and over, with each disconnect */\n    /** only on initial connect get prev messages, NOT on reconnects */\n    socket.emit('get_prev_messages');\n    socket.on('prev_messages', onMessagesReceived); \n    \n\n    const sendMessage = (user, message) => {\n        socket.emit('message', [{ user, message }]);\n    }\n    \n    const closeConnection = () => {\n        socket.disconnect();\n        console.log('socket disconnected');\n    }\n    \n    return { sendMessage, closeConnection };\n}\n\n","import { Avatar } from \"@material-ui/core\";\n\nconst AVATARS = [\n    'https://s3.amazonaws.com/spectrumnews-web-assets/wp-content/uploads/2018/11/13154625/20181112-SHANK3monkey-844.jpg',\n    'https://ichef.bbci.co.uk/news/1024/branded_news/E9DF/production/_96317895_gettyimages-164067218.jpg',\n    'https://cdn.mos.cms.futurecdn.net/bQgcMwEnyhFu6ASuUFrtsn.jpg',\n    'https://frontiersinblog.files.wordpress.com/2018/06/frontiers-in-ecology-evolution-ape-human-bonobo-muscles.jpg',\n    'https://static01.nyt.com/images/2015/09/23/multimedia/science-take-apes/science-take-apes-superJumbo-v3.jpg',\n    'https://www.pametnica.rs/wp-content/uploads/2015/08/Babun-1024x684.jpg',\n    'https://lh5.ggpht.com/-_6PJW4fB1lk/Tn8YuyO-XCI/AAAAAAAAAlE/RH3TnXKYqbs/s72-c/Babun%252520Memiliki%252520Kemampuan%252520Adaptif%252520Untuk%252520Beranalogi%252520Seperti%252520Manusia%25255B5%25255D.jpg?imgmax=800',\n    'https://www.sanovnik.org/wp-content/uploads/2015/04/babun-540x380.jpg',\n    'https://post.medicalnewstoday.com/wp-content/uploads/sites/3/2020/02/322868_1100-1100x628.jpg',\n    'https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/slideshows/dog_breed_health_issues_slideshow/1800x1200_dog_breed_health_issues_slideshow.jpg'\n];\n\nfunction getRandomAvatar() {\n    return AVATARS[Math.floor(Math.random() * AVATARS.length)];\n}\n\nexport default getRandomAvatar;","import React, { useState } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport Chat from './components/Chat/Chat';\nimport getRandomAvatar from './services/avatars-service';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const login = (input) => {\n    setUser({\n      username: input,\n      avatarUrl: getRandomAvatar()\n    });\n  }\n\n  const logout = () => {\n    setUser(null);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header user={user} logout={logout} />\n      {!user \n        ? <Login onLogin={login} /> \n        : <Chat user={user} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/** https://stackoverflow.com/questions/61220424/material-ui-drawer-finddomnode-is-deprecated-in-strictmode */\n/** patch for: MUI ToolTip throws warning: Warning: findDOMNode is deprecated in StrictMode. I changed React.StrictMode to React.Fragment */\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}